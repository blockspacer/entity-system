/**
* Inexor Entity System
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* OpenAPI spec version: 3.0.0
* Contact: info@inexor.org
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "EntitySystemMessage.h"

namespace inexor {
namespace entity_system {
namespace server {
namespace model {

EntitySystemMessage::EntitySystemMessage()
{
    m_Code = 0;
    m_Message = "";
    
}

EntitySystemMessage::~EntitySystemMessage()
{
}

void EntitySystemMessage::validate()
{
    // TODO: implement validation
}

nlohmann::json EntitySystemMessage::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["code"] = m_Code;
    val["message"] = ModelBase::toJson(m_Message);
    

    return val;
}

void EntitySystemMessage::fromJson(const nlohmann::json& val)
{
    setCode(val.at("code"));
    setMessage(val.at("message"));
    
}


int32_t EntitySystemMessage::getCode() const
{
    return m_Code;
}
void EntitySystemMessage::setCode(int32_t const value)
{
    m_Code = value;
    
}
std::string EntitySystemMessage::getMessage() const
{
    return m_Message;
}
void EntitySystemMessage::setMessage(std::string const& value)
{
    m_Message = value;
    
}

}
}
}
}

