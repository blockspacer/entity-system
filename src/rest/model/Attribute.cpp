/**
* Inexor Entity System
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* OpenAPI spec version: 3.0.0
* Contact: info@inexor.org
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Attribute.h"

namespace inexor {
namespace entity_system {
namespace server {
namespace model {

Attribute::Attribute()
{
    m_Attribute_uuid = "";
    m_Name = "";
    m_Datatype = "";
    m_Value = "";
    
}

Attribute::~Attribute()
{
}

void Attribute::validate()
{
    // TODO: implement validation
}

nlohmann::json Attribute::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["attribute_uuid"] = ModelBase::toJson(m_Attribute_uuid);
    val["name"] = ModelBase::toJson(m_Name);
    val["datatype"] = ModelBase::toJson(m_Datatype);
    val["value"] = ModelBase::toJson(m_Value);
    

    return val;
}

void Attribute::fromJson(const nlohmann::json& val)
{
    setAttributeUuid(val.at("attribute_uuid"));
    setName(val.at("name"));
    setDatatype(val.at("datatype"));
    setValue(val.at("value"));
    
}


std::string Attribute::getAttributeUuid() const
{
    return m_Attribute_uuid;
}
void Attribute::setAttributeUuid(std::string const& value)
{
    m_Attribute_uuid = value;
    
}
std::string Attribute::getName() const
{
    return m_Name;
}
void Attribute::setName(std::string const& value)
{
    m_Name = value;
    
}
std::string Attribute::getDatatype() const
{
    return m_Datatype;
}
void Attribute::setDatatype(std::string const& value)
{
    m_Datatype = value;
    
}
std::string Attribute::getValue() const
{
    return m_Value;
}
void Attribute::setValue(std::string const& value)
{
    m_Value = value;
    
}

}
}
}
}

