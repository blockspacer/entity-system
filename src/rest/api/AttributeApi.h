/**
 * Inexor Entity System
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 3.0.0
 * Contact: info@inexor.org
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.0.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AttributeApi.h
 *
 * 
 */

#ifndef AttributeApi_H_
#define AttributeApi_H_


#include <memory>
#include <string>

#include <corvusoft/restbed/session.hpp>
#include <corvusoft/restbed/resource.hpp>
#include <corvusoft/restbed/service.hpp>

#include "../../EntitySystem.hpp"
#include "../model/Attribute.h"
#include "../model/EntitySystemMessage.h"
#include "../model/EntityType.h"

namespace inexor {
namespace entity_system {
namespace rest {
namespace api {

using namespace inexor::entity_system::rest::model;

class  AttributeApi: public restbed::Service
{
public:
	AttributeApi(std::shared_ptr<inexor::entity_system::EntitySystem> entity_system);
	~AttributeApi();
	void startService(int const& port);
	void stopService();
};


/// <summary>
/// Creates (or updates if already exists) the attribute of the entity instance
/// </summary>
/// <remarks>
/// 
/// </remarks>
class  AttributeApiEntitiesInstancesEntity_instance_uuidAttributesNameResource: public restbed::Resource
{
public:
	AttributeApiEntitiesInstancesEntity_instance_uuidAttributesNameResource();
    virtual ~AttributeApiEntitiesInstancesEntity_instance_uuidAttributesNameResource();
    void POST_method_handler(const std::shared_ptr<restbed::Session> session);
    void DELETE_method_handler(const std::shared_ptr<restbed::Session> session);
    void GET_method_handler(const std::shared_ptr<restbed::Session> session);
};

/// <summary>
/// Creates (or updates if already exists) the value of the named attribute of the entity type with the given UUID
/// </summary>
/// <remarks>
/// 
/// </remarks>
class  AttributeApiEntitiesTypesEntity_type_uuidAttributesNameResource: public restbed::Resource
{
public:
	AttributeApiEntitiesTypesEntity_type_uuidAttributesNameResource();
    virtual ~AttributeApiEntitiesTypesEntity_type_uuidAttributesNameResource();
    void POST_method_handler(const std::shared_ptr<restbed::Session> session);
    void DELETE_method_handler(const std::shared_ptr<restbed::Session> session);
    void GET_method_handler(const std::shared_ptr<restbed::Session> session);
};

/// <summary>
/// Returns all attributes of the entity instance with the given UUID
/// </summary>
/// <remarks>
/// 
/// </remarks>
class  AttributeApiEntitiesInstancesEntity_instance_uuidAttributesResource: public restbed::Resource
{
public:
	AttributeApiEntitiesInstancesEntity_instance_uuidAttributesResource();
    virtual ~AttributeApiEntitiesInstancesEntity_instance_uuidAttributesResource();
    void GET_method_handler(const std::shared_ptr<restbed::Session> session);
};

/// <summary>
/// Returns all attributes of the given entity type with the given UUID
/// </summary>
/// <remarks>
/// 
/// </remarks>
class  AttributeApiEntitiesTypesEntity_type_uuidAttributesResource: public restbed::Resource
{
public:
	AttributeApiEntitiesTypesEntity_type_uuidAttributesResource();
    virtual ~AttributeApiEntitiesTypesEntity_type_uuidAttributesResource();
    void GET_method_handler(const std::shared_ptr<restbed::Session> session);
};


}
}
}
}

#endif /* AttributeApi_H_ */

